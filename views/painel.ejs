<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Atendimento</title>
    <link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        .scrollable-table {
            max-height: 300px;
            overflow-y: auto;
            display: block;
        }
    </style>
</head>

<body>
    <div class="container text-center mt-5">
        <h1 class="mb-4">Atendimento</h1>
        <div class="display-1 fw-bold text-danger mt-3" id="senhaDisplay">--</div>
    </div>

    <div class="container mt-5">
        <h3 class="text-center">Status das Senhas</h3>
        <div class="row">
            <div class="col-md-4">
                <h5>Últimos Atendimentos</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Senha</th>
                        </tr>
                    </thead>
                    <tbody id="atendimentosTable" class="scrollable-table"></tbody>
                </table>
            </div>
            <div class="col-md-4">
                <h5>Aguardando Normal</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Senha</th>
                        </tr>
                    </thead>
                    <tbody id="normaisTable" class="scrollable-table"></tbody>
                </table>
            </div>
            <div class="col-md-4">
                <h5>Aguardando Prioritário</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Senha</th>
                        </tr>
                    </thead>
                    <tbody id="prioritariosTable" class="scrollable-table"></tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        const host = "<%= host %>";
        const port = "<%= port %>";

        const socket = io(`http://${host}:${port}`);
        const senhaDisplay = document.getElementById('senhaDisplay');
        const atendimentosTable = document.getElementById('atendimentosTable');
        const normaisTable = document.getElementById('normaisTable');
        const prioritariosTable = document.getElementById('prioritariosTable');
        const soundEffect = new Audio('audio/beep.mp3');

        socket.on('called_sea', (senha) => {
            senhaDisplay.textContent = senha;
            enviarNotificao(senha);
            tocarSomEAnunciar(senha);
            atualizarStatus();
        });

        socket.on('queue_status', (data) => {
            atualizarTabela(atendimentosTable, data.served);
            atualizarTabela(normaisTable, data.waitingNormal);
            atualizarTabela(prioritariosTable, data.waitingPriority);
        });

        function atualizarStatus() {
            socket.emit('get_queue_status');
        }

        function atualizarTabela(tabela, dados) {
            tabela.innerHTML = '';
            dados.forEach(senha => {
                let row = document.createElement('tr');
                let cell = document.createElement('td');
                cell.textContent = senha;
                row.appendChild(cell);
                tabela.appendChild(row);
            });
        }

        function tocarSomEAnunciar(senha) {
            // Tocar som de aviso
            soundEffect.play();
            // Anunciar a senha com voz
            const synth = window.speechSynthesis;
            const utterance = new SpeechSynthesisUtterance(`Senha ${senha}`);
            utterance.lang = 'pt-BR';
            utterance.rate = 0.9;
            utterance.pitch = 1;
            synth.speak(utterance);
        }

        function enviarNotificao(senha) {
            // Verifica se o navegador suporta notificações
            if ("Notification" in window) {
                // Pede permissão ao usuário
                Notification.requestPermission().then(permission => {
                    if (permission === "granted") {
                        // Cria e exibe a notificação
                        new Notification("Senha chamada", {
                            body: `Senha: ${senha}`,
                        });
                    }
                });
            } else {
                console.log("O navegador não suporta notificações.");
            }
        }

        atualizarStatus();
    </script>

</body>

</html>